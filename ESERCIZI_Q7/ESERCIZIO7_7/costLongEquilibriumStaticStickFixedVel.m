function [f] = costLongEquilibriumStaticStickFixedVel(x,V0)

%  Dichiarazione delle variabili globali
global g ...                         % gravity acceleration 
       zEG_0 q0 gamma0 ...           % initial conditions
       rho0 ...                      % air density at z0
       myAC                          % the aircraft object, allocated here

mu_rel = (myAC.W/g)/(rho0*myAC.S*myAC.b);

%  Assegnazione delle componenti del design vector
alpha = x(1); 
delta_e = x(2); 
delta_s = x(3); 
delta_T = x(4);

F1 = (delta_T*myAC.T/myAC.W)*cos(alpha - myAC.mu_x + myAC.mu_T)-...
     sin(gamma0)-...
     ((rho0*V0^2)/(2*(myAC.W/myAC.S)))*...
     (myAC.CD_0 + myAC.K*((myAC.CL_alpha*alpha + myAC.CL_delta_e*delta_e +...
                           myAC.CL_delta_s*delta_s)^myAC.m));

F2 = q0*(1 - ((myAC.mac/myAC.b)/(4*mu_rel))*myAC.CL_q)-...
     ((delta_T*myAC.T/myAC.W)*(g/V0))*sin(alpha - myAC.mu_x + myAC.mu_T)+...
     (g/V0)*cos(gamma0)-...
     ((rho0*V0^2)/(2*(myAC.W/myAC.S)))*(g/V0)*...
     (myAC.CL_alpha*alpha + myAC.CL_delta_e*delta_e + myAC.CL_delta_s*delta_s);

F3 = (myAC.Cm_T_0 + myAC.Cm_T_alpha*alpha)*delta_T+...
     myAC.Cm_0 + myAC.Cm_alpha*alpha+...
     myAC.Cm_delta_e*delta_e+...
     myAC.Cm_delta_s*delta_s+...
     (myAC.mac/(2*V0))*myAC.Cm_q*q0;
    
%  Funzione obiettivo
f = F1*F1 + F2*F2 + F3*F3;

end
